# Generated by Django 3.1.5 on 2021-01-20 11:46

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AccountName', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'account',
                'db_table': 'web_account',
            },
        ),
        migrations.CreateModel(
            name='AccountGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('AccountGroupName', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('ParentGroup', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='web.account', verbose_name='ParentGroup')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_accountgroup_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_accountgroup_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'account_group',
                'db_table': 'web_account_group',
            },
        ),
        migrations.CreateModel(
            name='AccountLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AccountName', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=128)),
            ],
            options={
                'verbose_name': 'account_log',
                'db_table': 'web_account_log',
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('CompanyName', models.CharField(max_length=128)),
                ('Country', models.CharField(max_length=128)),
                ('State', models.CharField(max_length=128)),
                ('OfficePhoneNumber', models.BigIntegerField(blank=True, null=True)),
                ('Email', models.EmailField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_type', to='users.businesstype')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_companies_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_companies_objects', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'companies',
                'db_table': 'web_companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('No_ofDevice', models.BigIntegerField(blank=True, null=True)),
                ('ProductExpiryDate', models.DateTimeField(blank=True, null=True)),
                ('AMCActive', models.DateTimeField(blank=True, null=True)),
                ('AMCExpiry', models.DateTimeField(blank=True, null=True)),
                ('IsTrialVersion', models.BooleanField(default=False)),
                ('Action', models.CharField(max_length=128)),
                ('service_date', models.DateTimeField(blank=True, null=True)),
                ('service', models.BooleanField(blank=True, default=False, null=True)),
                ('CompanyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companies')),
                ('ProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_companyproduct_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_companyproduct_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'company_product',
                'db_table': 'web_company_product',
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('TransactionId', models.BigIntegerField()),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('LedgerId', models.BigIntegerField()),
                ('PriceCategoryId', models.BigIntegerField()),
                ('SaleAccount', models.BigIntegerField()),
                ('TaxId', models.BigIntegerField()),
                ('TaxType', models.BigIntegerField()),
                ('VATAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TotalTax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetTotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('BillDiscount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('GrandTotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('RoundOff', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IsInvoiced', models.CharField(max_length=128)),
                ('status', models.BooleanField(default=False)),
                ('Address1', models.CharField(blank=True, max_length=128, null=True)),
                ('Address2', models.CharField(blank=True, max_length=128, null=True)),
                ('Notes', models.CharField(blank=True, max_length=128, null=True)),
                ('CustomerName', models.CharField(blank=True, max_length=128, null=True)),
                ('CompanyProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_saleorder_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_saleorder_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sales_order',
                'verbose_name_plural': 'sales_orders',
                'db_table': 'web_sales_order',
            },
        ),
        migrations.CreateModel(
            name='WarehouseStock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('ProductId', models.BigIntegerField()),
                ('PriceListId', models.BigIntegerField()),
                ('WarehouseId', models.BigIntegerField()),
                ('Stock', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_warehousestock_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_warehousestock_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'warehouse_stock',
                'db_table': 'web_warehouse_stock',
            },
        ),
        migrations.CreateModel(
            name='VanSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('VatSalesType', models.BigIntegerField()),
                ('GSTSalesType', models.BigIntegerField()),
                ('VanId', models.BigIntegerField()),
                ('WarehouseId', models.BigIntegerField()),
                ('VanName', models.CharField(blank=True, max_length=128, null=True)),
                ('Password', models.CharField(blank=True, max_length=128, null=True)),
                ('CreditLimit', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('DiscountPercentPerBill', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('ShowNegativeStockItem', models.BooleanField(default=False)),
                ('CanEditUnitPrice', models.BooleanField(default=False)),
                ('AllowBillDiscount', models.BooleanField(default=False)),
                ('AllowSalesLessThanMinimumSalesPrice', models.BooleanField(default=False)),
                ('AllowNegativeStockSale', models.BooleanField(default=False)),
                ('AllowSalesLessThanPrice', models.BooleanField(default=False)),
                ('AllowItemwiseDiscount', models.BooleanField(default=False)),
                ('ShowSalesType', models.BooleanField(default=False)),
                ('CompanyProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_vansettings_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_vansettings_objects', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'web_van_settings',
                'verbose_name_plural': 'web_van_settings',
                'db_table': 'web_van_settings',
            },
        ),
        migrations.CreateModel(
            name='VanRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('RouteId', models.BigIntegerField()),
                ('VanId', models.BigIntegerField()),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_vanroute_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_vanroute_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'van_route',
                'db_table': 'web_van_route',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('TransactionTypeId', models.BigIntegerField()),
                ('MasterTypeId', models.BigIntegerField()),
                ('TransactionTypeName', models.CharField(max_length=128)),
                ('SyncDate', models.DateTimeField()),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_transactiontype_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_transactiontype_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'transaction_type',
                'db_table': 'web_transaction_type',
            },
        ),
        migrations.CreateModel(
            name='SaleRoute',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('RouteId', models.BigIntegerField()),
                ('RouteName', models.CharField(max_length=128)),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_saleroute_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_saleroute_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sale_route',
                'db_table': 'web_sale_route',
            },
        ),
        migrations.CreateModel(
            name='SaleReturnMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('TransactionId', models.BigIntegerField()),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('RefferenceBillNo', models.CharField(max_length=128)),
                ('RefferenceBillDate', models.DateTimeField(auto_now_add=True)),
                ('LedgerId', models.BigIntegerField()),
                ('PriceCategoryId', models.BigIntegerField()),
                ('EmployeeId', models.BigIntegerField()),
                ('SaleAccount', models.BigIntegerField()),
                ('TaxId', models.BigIntegerField()),
                ('TaxType', models.BigIntegerField()),
                ('VATAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TotalTax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetTotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AdditionalCost', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TotalGrossAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TotalDiscount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('BillDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('BillDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('GrandTotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('RoundOff', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VanId', models.BigIntegerField()),
                ('status', models.BooleanField(default=False)),
                ('Address1', models.CharField(blank=True, max_length=128, null=True)),
                ('Address2', models.CharField(blank=True, max_length=128, null=True)),
                ('Notes', models.CharField(blank=True, max_length=128, null=True)),
                ('CustomerName', models.CharField(blank=True, max_length=128, null=True)),
                ('CompanyProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_salereturnmaster_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_salereturnmaster_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sales_return_master',
                'verbose_name_plural': 'sales_return_masters',
                'db_table': 'web_sales_return_masters',
            },
        ),
        migrations.CreateModel(
            name='SaleReturnDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProductId', models.BigIntegerField()),
                ('Qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('FreeQty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('UnitPrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('RateWithTax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CostPerPrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('PriceListId', models.BigIntegerField()),
                ('DiscountAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('DiscountPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('GrossAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TaxableAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SaleReturnMasterId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_return_master', to='web.salereturnmaster', verbose_name='sale_return_master')),
            ],
            options={
                'verbose_name': 'sales_return_detail',
                'verbose_name_plural': 'sales_return_details',
                'db_table': 'web_sales_return_details',
            },
        ),
        migrations.CreateModel(
            name='SaleProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('ProductId', models.BigIntegerField()),
                ('BranchId', models.BigIntegerField()),
                ('Productcode', models.CharField(max_length=128)),
                ('Productname', models.CharField(max_length=128)),
                ('Displayname', models.CharField(blank=True, max_length=128, null=True)),
                ('Description', models.CharField(blank=True, max_length=128, null=True)),
                ('SyncDate', models.DateTimeField()),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_saleproduct_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_saleproduct_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sale_product',
                'db_table': 'web_sale_product',
            },
        ),
        migrations.CreateModel(
            name='SalePrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('ProductId', models.BigIntegerField()),
                ('PriceListId', models.BigIntegerField()),
                ('BranchId', models.BigIntegerField()),
                ('UnitName', models.CharField(max_length=128)),
                ('SalePrice1', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SalePrice2', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SalePrice3', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('MultiFactor', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AutoBarcode', models.BigIntegerField()),
                ('Barcode', models.CharField(blank=True, max_length=128, null=True)),
                ('SyncDate', models.DateTimeField()),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_saleprice_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_saleprice_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sale_price',
                'db_table': 'web_sale_price',
            },
        ),
        migrations.CreateModel(
            name='SaleOrderDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProductId', models.BigIntegerField()),
                ('Qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('FreeQty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('UnitPrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('RateWithTax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CostPerPrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('PriceListId', models.BigIntegerField()),
                ('DiscountAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('DiscountPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('GrossAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TaxableAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SaleOrderId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_oredr_master', to='web.saleorder', verbose_name='sale_oredr_master')),
            ],
            options={
                'verbose_name': 'sales_order_detail',
                'verbose_name_plural': 'sales_order_details',
                'db_table': 'web_sales_order_details',
            },
        ),
        migrations.CreateModel(
            name='SaleMaster',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('BranchId', models.BigIntegerField()),
                ('LedgerId', models.BigIntegerField()),
                ('PriceCategoryId', models.BigIntegerField()),
                ('SaleAccount', models.BigIntegerField()),
                ('TaxId', models.BigIntegerField()),
                ('TaxType', models.CharField(max_length=128)),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('TotalGrossAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('BillDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('BillDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TotalDiscount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TotalTax', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetTotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AdditionalCost', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('GrandTotal', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('RoundOff', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CashReceived', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CashAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('BankAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('Balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VanId', models.BigIntegerField()),
                ('TransactionTypeId', models.BigIntegerField()),
                ('status', models.BooleanField(default=False)),
                ('Address1', models.CharField(blank=True, max_length=128, null=True)),
                ('Address2', models.CharField(blank=True, max_length=128, null=True)),
                ('Notes', models.CharField(blank=True, max_length=128, null=True)),
                ('CardNumber', models.CharField(blank=True, max_length=128, null=True)),
                ('CustomerName', models.CharField(blank=True, max_length=128, null=True)),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_salemaster_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_salemaster_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sales_master',
                'verbose_name_plural': 'sales_masters',
                'db_table': 'web_sales_masters',
            },
        ),
        migrations.CreateModel(
            name='SaleDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransactionId', models.BigIntegerField()),
                ('ProductId', models.BigIntegerField()),
                ('Qty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('FreeQty', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('UnitPrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('InclusivePrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('PriceListId', models.BigIntegerField()),
                ('DiscountPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('DiscountAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscPercent', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('AddlDiscAmt', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('GrossAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TaxableAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('VATAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('CGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTPerc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('IGSTAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX1Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX2Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Perc', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('TAX3Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('SaleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_master', to='web.salemaster', verbose_name='sale_master')),
            ],
            options={
                'verbose_name': 'sales_detail',
                'verbose_name_plural': 'sales_details',
                'db_table': 'web_sales_details',
            },
        ),
        migrations.CreateModel(
            name='SaleAccountLedger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('LedgerId', models.BigIntegerField()),
                ('PartyName', models.CharField(max_length=128)),
                ('RouteId', models.BigIntegerField()),
                ('GroupId', models.BigIntegerField()),
                ('DisplayName', models.CharField(blank=True, max_length=128, null=True)),
                ('VatNum', models.CharField(blank=True, max_length=128, null=True)),
                ('GstNum', models.CharField(blank=True, max_length=128, null=True)),
                ('Tax1Number', models.CharField(blank=True, max_length=128, null=True)),
                ('Tax2Number', models.CharField(blank=True, max_length=128, null=True)),
                ('Tax3Number', models.CharField(blank=True, max_length=128, null=True)),
                ('CrNum', models.CharField(blank=True, max_length=128, null=True)),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_saleaccountledger_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_saleaccountledger_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'sale_account_ledger',
                'db_table': 'web_sale_account_ledger',
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('PhoneNumber', models.CharField(max_length=128)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_register_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_register_objects', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'register',
                'db_table': 'web_register',
            },
        ),
        migrations.CreateModel(
            name='Reciept',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('VoucherType', models.CharField(max_length=128)),
                ('TransactionId', models.BigIntegerField()),
                ('CashOrBankId', models.BigIntegerField()),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('PaymentGateway', models.BigIntegerField(blank=True, null=True)),
                ('RefferenceNo', models.CharField(blank=True, max_length=128, null=True)),
                ('CardNetwork', models.BigIntegerField(blank=True, null=True)),
                ('PaymentStatus', models.BigIntegerField(blank=True, null=True)),
                ('DueDate', models.DateTimeField(auto_now_add=True)),
                ('LedgerId', models.BigIntegerField()),
                ('Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('Discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('Balance', models.CharField(max_length=128)),
                ('Narration', models.CharField(max_length=128)),
                ('status', models.BooleanField(default=False)),
                ('CompanyProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_reciept_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_reciept_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'web_reciept',
                'verbose_name_plural': 'web_reciepts',
                'db_table': 'web_reciept',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('VoucherType', models.CharField(max_length=128)),
                ('TransactionId', models.BigIntegerField()),
                ('CashOrBankId', models.BigIntegerField()),
                ('Date', models.DateTimeField(auto_now_add=True)),
                ('PaymentGateway', models.BigIntegerField(blank=True, null=True)),
                ('RefferenceNo', models.CharField(blank=True, max_length=128, null=True)),
                ('CardNetwork', models.BigIntegerField(blank=True, null=True)),
                ('PaymentStatus', models.BigIntegerField(blank=True, null=True)),
                ('DueDate', models.DateTimeField(auto_now_add=True)),
                ('LedgerId', models.BigIntegerField()),
                ('Amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('Discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('NetAmount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('Balance', models.CharField(max_length=128)),
                ('Narration', models.CharField(max_length=128)),
                ('status', models.BooleanField(default=False)),
                ('CompanyProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_payment_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_payment_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'web_payment',
                'verbose_name_plural': 'web_payments',
                'db_table': 'web_payment',
            },
        ),
        migrations.CreateModel(
            name='LastSalesPrice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('LedgerId', models.BigIntegerField()),
                ('SalePrice', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('PriceListId', models.BigIntegerField()),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_lastsalesprice_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_lastsalesprice_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'last_sale_price',
                'db_table': 'web_last_sale_price',
            },
        ),
        migrations.CreateModel(
            name='ExpenseLedger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('LedgerId', models.BigIntegerField()),
                ('LedgerName', models.CharField(max_length=128)),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_expenseledger_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_expenseledger_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'expense_ledger',
                'db_table': 'web_expense_ledger',
            },
        ),
        migrations.CreateModel(
            name='CustomerLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('FirstName', models.CharField(max_length=128)),
                ('LastName', models.CharField(max_length=128)),
                ('UserName', models.CharField(max_length=128)),
                ('Country', models.CharField(max_length=128)),
                ('State', models.CharField(max_length=128)),
                ('PhoneNumber', models.BigIntegerField(blank=True, null=True)),
                ('Action', models.CharField(max_length=128)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_customerlog_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_customerlog_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer_log',
                'db_table': 'web_customer_log',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('UserName', models.CharField(max_length=128)),
                ('FirstName', models.CharField(max_length=128)),
                ('LastName', models.CharField(max_length=128)),
                ('Email', models.EmailField(max_length=128)),
                ('Country', models.CharField(max_length=128)),
                ('State', models.CharField(max_length=128)),
                ('CompanyName', models.CharField(max_length=128)),
                ('PhoneNumber', models.BigIntegerField(blank=True, null=True)),
                ('Description', models.CharField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_customer_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_customer_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'customer',
                'db_table': 'web_customer',
            },
        ),
        migrations.CreateModel(
            name='CompanyProductLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('CompanyProductId', models.BigIntegerField(blank=True, null=True)),
                ('No_ofDevice', models.BigIntegerField(blank=True, null=True)),
                ('ProductExpiryDate', models.DateTimeField(blank=True, null=True)),
                ('AMCActive', models.DateTimeField(blank=True, null=True)),
                ('AMCExpiry', models.DateTimeField(blank=True, null=True)),
                ('IsTrialVersion', models.BooleanField(default=False)),
                ('Action', models.CharField(max_length=128)),
                ('service_date', models.DateTimeField(blank=True, null=True)),
                ('service', models.BooleanField(blank=True, default=False, null=True)),
                ('CompanyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.companies')),
                ('ProductId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.product')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_companyproductlog_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_companyproductlog_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'companyproductlog',
                'db_table': 'web_companyproductlog',
            },
        ),
        migrations.CreateModel(
            name='CompanyDevicesLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('DeviceName', models.CharField(max_length=128)),
                ('DeviceCode', models.CharField(max_length=128)),
                ('Type', models.CharField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_companydeviceslog_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_companydeviceslog_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'company_devicelog',
                'db_table': 'web_company_devicelog',
            },
        ),
        migrations.CreateModel(
            name='CompanyDevices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('DeviceName', models.CharField(max_length=128)),
                ('DeviceCode', models.CharField(max_length=128)),
                ('Type', models.CharField(choices=[('client', 'Client'), ('server', 'Server')], max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('CompanyProductId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.companyproduct')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_companydevices_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_companydevices_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'companydevice',
                'db_table': 'web_company_device',
            },
        ),
        migrations.CreateModel(
            name='CompaniesLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('Companyid', models.BigIntegerField(blank=True, null=True)),
                ('CompanyName', models.CharField(max_length=128)),
                ('Country', models.CharField(max_length=128)),
                ('State', models.CharField(max_length=128)),
                ('OfficePhoneNumber', models.BigIntegerField(blank=True, null=True)),
                ('Email', models.EmailField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_type_log', to='users.businesstype')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_companieslog_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_companieslog_objects', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'companies_log',
                'db_table': 'web_companies_log',
            },
        ),
        migrations.CreateModel(
            name='AccountLedgerLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('LedgerName', models.CharField(max_length=128)),
                ('ParentGroup', models.CharField(max_length=128)),
                ('OpeningBalanceType', models.CharField(max_length=128)),
                ('OpeningBalanceAmount', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_accountledgerlog_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_accountledgerlog_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'account_ledger_log',
                'db_table': 'web_account_ledger_log',
            },
        ),
        migrations.CreateModel(
            name='AccountLedger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('LedgerName', models.CharField(max_length=128)),
                ('OpeningBalanceType', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=128)),
                ('OpeningBalanceAmount', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('ParentGroup', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='web.accountgroup', verbose_name='ParentGroup')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_accountledger_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_accountledger_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'account_ledger',
                'db_table': 'web_account_ledger',
            },
        ),
        migrations.CreateModel(
            name='AccountGroupLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('AccountGroupName', models.CharField(max_length=128)),
                ('Description', models.CharField(max_length=128)),
                ('Action', models.CharField(max_length=128)),
                ('ParentGroup', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='web.account', verbose_name='ParentGroup')),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator_accountgrouplog_objects', to=settings.AUTH_USER_MODEL)),
                ('updater', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updater_accountgrouplog_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'account_group_log',
                'db_table': 'web_account_group_log',
            },
        ),
    ]
